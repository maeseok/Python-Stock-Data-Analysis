import numpy as np
#x1, x2값을 설정
X = np.array([10, 20])
#입력층에서 1층 입력 신호로 향하는 가중치 6개
W1 = np.array([[0.1, 0.3, 0.5], [0.2, 0.4, 0.6]])
#1층으로 향하는 편향
B1 = np.array([1, 2, 3])  # ③

#시그모이드 함수 사용하여 0~1값 반환
def sigmoid(x): 
    return 1 / (1 + np.exp(-x))

#1층의 입력 신호를 계산
A1 = np.dot(X, W1) + B1
#1층의 입력 신호를 시그모이드 함수로 활성화하여 출력
Z1 = sigmoid(A1)

print('A1 :', A1)
print('Z1 :', Z1)
#은닉층에서 출력층 입력 신호로 향하는 가중치 6개
W2 = np.array([[0.1, 0.4], [0.2, 0.5], [0.3, 0.6]])
#은닉층에서 출력층으로 향하는 편향 2개
B2 = np.array([0.1, 0.2])

#은닉층의 출력값 Z1에 가중치 W2를 곱하고 편향 B2를 더함
A2 = np.dot(Z1, W2) + B2
#시그모이드 함수 사용하여 Y값 도출
Y = sigmoid(A2) 

print('A2 :', A2)
print('Y  :', Y)